name: Continuous Integration
on:
  [push, pull_request]

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest # Sets the build environment a machine with the latest Ubuntu installed
    steps:
      - uses: actions/checkout@v2 # Adds a step to checkout the repository code

      - name: build c#
        run: dotnet build

      - name: install javascript dependencies
        run: cd ./DotnetTemplate.Web && npm install

      - name: build javascript
        run: cd ./DotnetTemplate.Web && npm run build

      - name: dotnet tests
        run: dotnet test

      - name: typescript tests
        run: cd ./DotnetTemplate.Web && npm t

      - name: lint
        run: cd ./DotnetTemplate.Web && npm run lint

      - name: send success slack message
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text": "Successfully ran pipeline"}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: send failure slack message
        if: ${{ failure() }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text": "Failed to run pipeline"}' ${{ secrets.SLACK_WEBHOOK_URL }}
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/dotnettemplate
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
